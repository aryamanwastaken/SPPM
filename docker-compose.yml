version: '3.8'

services:
  # Main model service
  stock-propensity-model:
    build: .
    container_name: stock-propensity-model
    volumes:
      - ./:/app
      - ./logs:/app/logs
      - ./models:/app/models
    env_file:
      - .env
    depends_on:
      - mlflow
    networks:
      - stock-propensity-network
    command: python stock_propensity_model/main.py

  # API service
  stock-propensity-api:
    build: .
    container_name: stock-propensity-api
    volumes:
      - ./:/app
      - ./logs:/app/logs
      - ./models:/app/models
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - stock-propensity-model
      - mlflow
    networks:
      - stock-propensity-network
    command: uvicorn stock_propensity_model.api:app --host 0.0.0.0 --port 8000 --reload

  # MLflow tracking server
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.3.1
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow:/mlflow
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    networks:
      - stock-propensity-network
    command: mlflow server --backend-store-uri sqlite:///mlflow/mlflow.db --default-artifact-root s3://mlflow-artifacts/ --host 0.0.0.0

  # MinIO for local S3-compatible storage (development only)
  minio:
    image: minio/minio:RELEASE.2023-01-25T00-19-54Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio-data:/data
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    networks:
      - stock-propensity-network
    command: server /data --console-address ":9001"

networks:
  stock-propensity-network:
    driver: bridge